pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
--array with all objects present in the game
objects = {}
players = {}
fwall = 0
function _init()
    add(players, playerconstruct(8,8*13,1))
end 
function _update()
    --launch update() method on each object
    foreach(objects, function(obj) obj.update(obj) end)
    foreach(players, function(p) p.update(p) end)
    --first player press the shoot button
    if btnp(5, 0) then
        --create a new bullet and add it in the objects of the game
        --we pass the player position as a parameter, so the bullet will
        --appear at the player position
        add(objects, bulletconstruct(players[1].position.x,players[1].position.y,players[1].dir))
    end
end
function _draw()
    cls()
    -- draw the world 
    map(0,0,0,0,16,16)
    -- draw the player, we use dir to mirror sprites
    foreach(players, function(p) spr(p.spr,p.position.x,p.position.y,1,1,pdir==-1) end )
    foreach(objects, function(obj) spr(obj.sprite, obj.position.x, obj.position.y) end)
end
bulletconstruct = function( x, y,d)
    local obj = {}--an array containing x and y position
    obj.position = {x=x, y=y}
    obj.dir = d
    --colision
    obj.hitbox = {x=2, y=4, w=4, h=3}
    --the sprite number used to draw the bullet
    obj.sprite = 3
    --define an update function that will be called by the program
    obj.update = function(this)
        --move the bullet to the right
        if(checkwall(this))del(objects, this)
        this.position.x += this.dir * 5       
    end--return the bullet
    return obj
end
function canfall(p)
    -- get the map tile under the player
    v=mget(flr((p.position.x+4)/8),flr((p.position.y+8)/8))
    -- see if it's flagged as wall
    return not fget(v,0) 
end
function change_state(p,s)
    p.state=s
    p.pat=0
end
playerconstruct = function( x, y, n)
    local obj = {}--an array containing x and y position
    obj.position = {x=x, y=y} 
    obj.state=0-- current player state 
    obj.spr=0-- current sprite 
    obj.dir=0-- current direction
    obj.pat=0-- player state timer
    --colision
    obj.hitbox = {x=2, y=4, w=4, h=3}
    --define an update function that will be called by the program
    obj.update = function(this)
        b0=btn(0)-- button0 state
        b1=btn(1)-- button1 state
        b2=btn(4)-- button2 state
        this.position.x=(this.position.x+128)%128-- no bounds left and right
        this.pat+=1-- increment state clock
        -- idle state 
        if this.state==0 then
            this.spr=0
            if (b0 or b1) change_state(this,1)
            if (b2)then
                change_state(this,3)
                sfx(0)
            end
            if (canfall(this)) change_state(this,2)
        end
        -- walk state 
        if this.state==1 then
            if (b0)this.dir=-1
            if (b1)this.dir=1
            this.position.x+=this.dir*min(this.pat,2)
            this.spr=flr(this.pat/2)%2
            if (not (b0 or b1)) change_state(this,0)
            if (b2)then
                change_state(this,3)
                sfx(0)
            end
            if (canfall(this)) change_state(this,2)
        end
        -- fall state
        if this.state==2 then
            this.spr=2
            if (canfall(this)) then
                if (b0) this.position.x-=1-- steer left
                if (b1) this.position.x+=1 -- steer right
                this.position.y+=min(4,this.pat)-- move the player
                if (not canfall(this))this.position.y=flr(this.position.y/8)*8-- check ground contact
            else
                this.position.y=flr(this.position.y/8)*8
                -- fix position when we hit ground
                change_state(this,0)
            end
        end
        -- jump state
        if this.state==3 then
            this.spr=2
            this.position.y-=6-this.pat
            if (b0) this.position.x-=2
            if (b1) this.position.x+=2
            if (not b2 or this.pat>7) change_state(this,0)
        end
        --out of bounds
        if (this.position.y > 140) then
            this.position.x=8
            this.position.y=8*13
            sfx(01)
        end       
    end--return the bullet
    return obj
end
-- detect if hitbox of object o does hit the a wall map sprite
function checkwall(o)
    --detect each corner of the hitbox one by one if it collide
    --the <skin> allow to not detect floor on the side if we are
    --standing on the ground
    --top left corner
    --position of the top left corner of the hitbox is calculated
    --by adding the x position of the object and his hitbox this         
    --number is divided by 8, because mget use sprite position and 
    --not pixel position, and all sprite in pico-8 are 8 pixels wide
    --flr() allow to get a integer without decimal
    local xpos = flr((o.position.x + o.hitbox.x)/8)
    local ypos = flr((o.position.y + o.hitbox.y)/8)
    --get the sprite at the calculated position
    local foundsprite = mget(xpos, ypos)
    --stock in d variable is the found sprite is a wall or not
    local d = fget(foundsprite , fwall)
    -- top right corner
    if d == false then
        d = fget(mget(flr((o.position.x + o.hitbox.x +o.hitbox.w)/8),flr((o.position.y + o.hitbox.y)/8)),fwall)
    end
    --bottom left corner
    if d == false then
        d = fget(mget(flr((o.position.x +o.hitbox.x)/8),flr((o.position.y + o.hitbox.y +o.hitbox.h)/8)),fwall)
    end
    --bottom right corner
    if d == false then
        d = fget(mget(flr((o.position.x + o.hitbox.x +o.hitbox.w)/8),flr((o.position.y + o.hitbox.y +o.hitbox.h)/8)),fwall)
    end
    return d
end
__gfx__
00000000000000000000000000000000333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500005555000009000000000000333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
00588800005888000009000000000000333333334444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
00555500005555000009000000000000343434344444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
00051110000511100909000000666600444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
000550000005500009090900006aa600444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
05656560065656500090990000666600444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
06565650056565600009900000000000444444444444444400000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0500000000000000040404040404040500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0504040404040404050505050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
